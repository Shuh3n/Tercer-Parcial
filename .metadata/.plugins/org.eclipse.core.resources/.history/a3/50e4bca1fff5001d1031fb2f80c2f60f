package application;

import java.io.IOException;


import controllers.ClienteNormalController;
import controllers.VentanaPrincipalController;
import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.layout.AnchorPane;
import javafx.stage.Stage;
import programacion2.parcial3.model.ClienteJuridico;
import programacion2.parcial3.model.ClienteNormal;
import programacion2.parcial3.model.Empresa;
import programacion2.parcial3.model.Factura;

public class Aplicacion extends Application{


	private Empresa empresa;
	private Stage primaryStage;


	@Override
	public void start(Stage primaryStage) throws Exception {
		this.primaryStage= primaryStage;
		this.empresa= new Empresa();
		mostrarVentanaPrincipal();
	}

	private void mostrarVentanaPrincipal() throws IOException {
		//Se establece la ruta de la ventana que desea ejecutar

		FXMLLoader loader= new FXMLLoader();
		loader.setLocation(Aplicacion.class.getResource("../Views/VentanaPrincipalView.fxml"));
		AnchorPane anchorPane = (AnchorPane)loader.load();
		VentanaPrincipalController ventanaPrincipalController = loader.getController();
		ventanaPrincipalController.setAplicacion(this);

		Scene scene= new Scene(anchorPane);
		primaryStage.setScene(scene);
		primaryStage.show();
		VentanaPrincipalController controller = loader.getController();
		controller.setStage(primaryStage);
	}

	public Empresa getEmpresa() {
		return empresa;
	}

	public void setBanco(Empresa empresa) {
		this.empresa = empresa;
	}

	public Stage getPrimaryStage() {
		return primaryStage;
	}

	public void setPrimaryStage(Stage primaryStage) {
		this.primaryStage = primaryStage;
	}

	public static void main(String[] args) {
		launch(args);
	}

	public boolean crearClienteNormal(String name, String surnames, String id, String estrato) {
		boolean flag = empresa.crearClienteNormal(name, surnames, id, estrato);
		return flag;
	}

	public ClienteNormal encontrarClienteNormal(String cedulaCliente) {
		ClienteNormal cliente = empresa.encontrarClienteNormal(cedulaCliente);
		return cliente;
	}

	public boolean crearFactura(String code, String fecha, String totalPagar, String idClienteFac) {
		boolean flag = empresa.crearFacturaNormal(code, totalPagar, idClienteFac, fecha);
		return flag;
	}
	public boolean crearFacturaJuridico(String code, String fecha, String totalPagar, String nit) {
		boolean flag = empresa.crearFacturaNormal(code, totalPagar, nit, fecha);
		return flag;
	}

	public Factura encontrarFactura(String cedulaCliente) {
		Factura fac= empresa.encontrarFacturaNormal(cedulaCliente);
		return fac;
	}

	public boolean crearClienteJuridico(String name, String nit, String telefono) {
		boolean flag = empresa.crearClienteJuridico(name, nit, telefono);
		return flag;
	}

	public ClienteJuridico encontrarClienteJuridico(String nit) {
		ClienteJuridico cliente = empresa.encontrarClienteJuridico(nit);
		return cliente;
	}



}
